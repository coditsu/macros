version: 2

jobs:
  coditsu:
    machine: true
    steps:
      - checkout
      - run: |
          docker create -v /sources --name sources alpine:3.4 /bin/true
          docker cp ./ sources:/sources
          docker run \
            -e CODITSU_API_KEY \
            -e CODITSU_API_SECRET \
            -e CODITSU_REPOSITORY_ID \
            -e CODITSU_BUILD_BRANCH=$CIRCLE_BRANCH \
            --volumes-from sources \
            coditsu/build-runner:latest

  specs:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
    steps:
      - restore_cache:
          keys:
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-git-{{ .Branch }}-{{ .Revision }}
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-git-{{ .Branch }}-
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-git-
      - checkout
      - save_cache:
          key: v{{ .Environment.CIRCLE_CACHE_VERSION }}-git-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - restore_cache:
          keys:
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{arch}}-gem-lock-{{ checksum "Gemfile.lock" }}
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{arch}}-gem-lock-
      - run: gem update --system
      - run: gem install bundler
      - run: bundle config github.https true
      - run: bundle check --path=vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{arch}}-gem-lock-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec rspec

workflows:
  version: 2
  build:
    jobs:
      - coditsu
      - specs

  nightly:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - coditsu
      - specs
